*,
*::before,
*::after {
  box-sizing: border-box;
}

// theme variables
$primaryBackground: #fff;
$primaryPageBackground: #fff;

// breakpoints map
$breakpoints: (
  sm: 26rem,
  md: 40rem,
  lg: 60rem
);

// number of columns variable
$items: 12;

body {
    height: 100vh;
    width: 100vw;
    margin: 0;
    background-color: $primaryBackground;
}

#root {
  background-color: $primaryPageBackground;
  width: 100%;
  height: 100%;

  -webkit-box-shadow: 0px 0px 5px 0px rgba(0,0,0,0.75);
  -moz-box-shadow: 0px 0px 5px 0px rgba(0,0,0,0.75);
  box-shadow: 0px 0px 5px 0px rgba(0,0,0,0.75);
}

// media query mixin
@mixin break($size) {  
  @media (min-width: map-get($breakpoints, $size)) {
    @content;
  }
}

// grid container
.row-grid {
  display: flex;
  flex-flow: row wrap;
}

// grid item
.col-item {
  padding: 0.5rem;
  flex: 0 0 100%; // default
  &:nth-child(even) {
    background-color: #eee;
  }
  &:nth-child(odd) {
    background-color: #ddd;
  }
}

// loop over the breakpoints
@each $key, $value in $breakpoints {
  body {
    @include break($key) {
      padding: 0 #{1/$items * 100%} 0 #{1/$items * 100%};
      }
  }
  @for $i from 1 through $items {
    .#{$key}-cover-#{$i} {
      @include break($key) {
        flex: 0 0 #{$i / $items * 100%};  // adaptive
      }
    }
  }
}